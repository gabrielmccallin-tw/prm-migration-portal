{"version":3,"sources":["app/App.module.scss","env.js","header/Header.js","service/date.js","confirmation/Confirmation.js","patient-lookup/Lookup.js","features.js","service/data.js","service/addPatient.js","service/lookup.js","status-list/StatusList.js","service/getPatients.js","app/Content.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","publicPath","endpoints","Header","useState","clicked","setClicked","menuToggle","className","role","data-testid","to","aria-label","xmlns","focusable","viewBox","fill","d","alt","src","href","id","onClick","aria-controls","aria-labelledby","aria-hidden","convertDate","dateString","date","Date","getDate","getMonth","getFullYear","Confirmation","confirmDeduction","data","nhsNumber","patientName","dob","practice","telephone","email","submitDeduction","setNhsNumber","error","onSubmit","event","preventDefault","autoComplete","htmlFor","name","type","onChange","target","value","domainOptions","features","api","host","lookupData","patients","addPatientService","patient","a","async","fetch","method","body","JSON","stringify","headers","addPatient","push","status","requestDate","lookupService","response","json","lookup","find","item","StatusList","scope","map","requester","getPatientsService","ods","history","useHistory","pdsResponse","setPdsResponse","setPatients","useEffect","exact","path","Lookup","nhs","patientInfo","validateNhsNumber","test","charAt","App","featuresToSet","parse","window","location","search","parseBooleans","Object","entries","forEach","key","styles","content","Content","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69015d90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__tFr1T\"};","export const publicPath = 'prm-migration-portal';\nexport const stubApiDomain = 'http://localhost:5001';\nexport const apiDomain = 'https://dev.prm.patient-deductions.nhs.uk';\nexport const endpoints = {\n    patients: 'patients',\n    patient: 'patientinfo'\n};","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { publicPath } from '../env';\n\nconst Header = () => {\n  const [clicked, setClicked] = useState(true);\n\n  const menuToggle = () => {\n    setClicked(!clicked);\n  };\n\n  return (\n    <header className=\"nhsuk-header nhsuk-header--transactional\" role=\"banner\" data-testid=\"header\">\n      <div className=\"nhsuk-width-container nhsuk-header__container\">\n        <div className=\"nhsuk-header__logo\">\n          <Link className=\"nhsuk-header__link\" to={`/${publicPath}`} aria-label=\"NHS homepage\">\n            <svg className=\"nhsuk-logo nhsuk-logo--white\" xmlns=\"http://www.w3.org/2000/svg\"\n              focusable=\"false\" viewBox=\"0 0 40 16\">\n              <path fill=\"#fff\" d=\"M0 0h40v16H0z\" />\n              <path fill=\"#005eb8\"\n                d=\"M3.9 1.5h4.4l2.6 9h.1l1.8-9h3.3l-2.8 13H9l-2.7-9h-.1l-1.8 9H1.1M17.3 1.5h3.6l-1 4.9h4L25 1.5h3.5l-2.7 13h-3.5l1.1-5.6h-4.1l-1.2 5.6h-3.4M37.7 4.4c-.7-.3-1.6-.6-2.9-.6-1.4 0-2.5.2-2.5 1.3 0 1.8 5.1 1.2 5.1 5.1 0 3.6-3.3 4.5-6.4 4.5-1.3 0-2.9-.3-4-.7l.8-2.7c.7.4 2.1.7 3.2.7s2.8-.2 2.8-1.5c0-2.1-5.1-1.3-5.1-5 0-3.4 2.9-4.4 5.8-4.4 1.6 0 3.1.2 4 .6\" />\n              <img alt=\"nhs-logo\" src=\"https://assets.nhs.uk/images/nhs-logo.png\" />\n            </svg>\n          </Link>\n        </div>\n        <div className=\"nhsuk-header__transactional-service-name\">\n          <a className=\"nhsuk-header__transactional-service-name--link\" href=\"/\">Migration Portal</a>\n        </div>\n        <div className=\"nhsuk-header__content\" id=\"content-header\">\n          <div className=\"nhsuk-header__menu nhsuk-header__menu--only\">\n            <button className=\"nhsuk-header__menu-toggle\" id=\"toggle-menu\" onClick={menuToggle} aria-controls=\"header-navigation\" aria-label=\"Open menu\">Menu</button>\n          </div>\n        </div>\n      </div>\n      <nav className={clicked ? \"nhsuk-header__navigation\" : \"nhsuk-header__navigation js-show\"} id=\"header-navigation\" role=\"navigation\" aria-label=\"Primary navigation\" aria-labelledby=\"label-navigation\">\n        <div className=\"nhsuk-width-container\">\n          <p className=\"nhsuk-header__navigation-title\"><span id=\"label-navigation\">Menu</span>\n            <button className=\"nhsuk-header__navigation-close\" id=\"close-menu\">\n              <svg className=\"nhsuk-icon nhsuk-icon__close\" onClick={menuToggle} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" focusable=\"false\">\n                <path d=\"M13.41 12l5.3-5.29a1 1 0 1 0-1.42-1.42L12 10.59l-5.29-5.3a1 1 0 0 0-1.42 1.42l5.3 5.29-5.3 5.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l5.29-5.3 5.29 5.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z\" />\n              </svg>\n              <span className=\"nhsuk-u-visually-hidden\">Close menu</span>\n            </button>\n          </p>\n          <ul className=\"nhsuk-header__navigation-list nhsuk-header__navigation-list--tight\">\n            <li className=\"nhsuk-header__navigation-item\">\n              <Link className=\"nhsuk-header__navigation-link\" to={`/${publicPath}`}>\n                Find patient\n                <svg className=\"nhsuk-icon nhsuk-icon__chevron-right\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M15.5 12a1 1 0 0 1-.29.71l-5 5a1 1 0 0 1-1.42-1.42l4.3-4.29-4.3-4.29a1 1 0 0 1 1.42-1.42l5 5a1 1 0 0 1 .29.71z\" />\n                </svg>\n              </Link>\n            </li>\n            <li className=\"nhsuk-header__navigation-item\">\n              <Link className=\"nhsuk-header__navigation-link\" to={`/${publicPath}/activity`}>\n                Pending transfer\n                <svg className=\"nhsuk-icon nhsuk-icon__chevron-right\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M15.5 12a1 1 0 0 1-.29.71l-5 5a1 1 0 0 1-1.42-1.42l4.3-4.29-4.3-4.29a1 1 0 0 1 1.42-1.42l5 5a1 1 0 0 1 .29.71z\" />\n                </svg>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n\n  );\n};\n\nexport default Header;","export const convertDate = (dateString) => {\n    const date = new Date(dateString);\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { convertDate } from '../service/date';\n\nconst Confirmation = ({ confirmDeduction, data }) => {\n  const { nhsNumber, patientName, dob, practice, telephone, email } = data;\n  return (\n    <div data-testid=\"confirmation\">\n      <dl className=\"nhsuk-summary-list\">\n        <div className=\"nhsuk-summary-list__row\">\n          <dt className=\"nhsuk-summary-list__key\">NHS Number</dt>\n          <dd className=\"nhsuk-summary-list__value\">{nhsNumber}</dd>\n        </div>\n        <div className=\"nhsuk-summary-list__row\">\n          <dt className=\"nhsuk-summary-list__key\">Name</dt>\n          <dd className=\"nhsuk-summary-list__value\">{patientName}</dd>\n        </div>\n        <div className=\"nhsuk-summary-list__row\">\n          <dt className=\"nhsuk-summary-list__key\">Date of birth</dt>\n          <dd className=\"nhsuk-summary-list__value\">{convertDate(dob)}</dd>\n        </div>\n        <div className=\"nhsuk-summary-list__row\">\n          <dt className=\"nhsuk-summary-list__key\">Current GP Practice</dt>\n          <dd className=\"nhsuk-summary-list__value\">{practice}</dd>\n        </div>\n        <div className=\"nhsuk-summary-list__row\">\n          <dt className=\"nhsuk-summary-list__key\">Telephone</dt>\n          <dd className=\"nhsuk-summary-list__value\">{telephone}</dd>\n        </div>\n        <div className=\"nhsuk-summary-list__row\">\n          <dt className=\"nhsuk-summary-list__key\">Email address</dt>\n          <dd className=\"nhsuk-summary-list__value\">{email}</dd>\n        </div>\n      </dl>\n      <button className=\"nhsuk-button\" onClick={() => confirmDeduction()}>\n        Add to transfer list\n    </button>\n      <div className=\"nhsuk-back-link\">\n        <Link className=\"nhsuk-back-link__link\" to=\"/home\">\n          <svg\n            className=\"nhsuk-icon nhsuk-icon__chevron-left\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            aria-hidden=\"true\"\n          >\n            <path\n              d=\"M8.5 12c0-.3.1-.5.3-.7l5-5c.4-.4 1-.4 1.4 0s.4 1 0 1.4L10.9 12l4.3 4.3c.4.4.4 1 0 1.4s-1 .4-1.4 0l-5-5c-.2-.2-.3-.4-.3-.7z\" />\n          </svg>\n          Go back\n      </Link>\n      </div>\n    </div>\n  )\n};\n\nexport default Confirmation;\n","import React, { useState } from 'react';\n\nexport default ({ submitDeduction }) => {\n  const [nhsNumber, setNhsNumber] = useState(\"\");\n  const [error] = useState(\"\");\n\n  const onSubmit = event => {\n    event.preventDefault();\n    submitDeduction(nhsNumber);\n  };\n\n  return (\n    <div>\n      <form data-testid=\"deduction-form\" onSubmit={onSubmit} autoComplete=\"off\">\n        <div className=\"nhsuk-form-group\">\n          <label className=\"nhsuk-label\" id=\"nhs-number-input\" htmlFor=\"nhs-number\">\n            NHS Number\n          </label>\n          <input\n            className={error ? \"nhsuk-input nhsuk-input--error\" : \"nhsuk-input\"}\n            id=\"nhs-number\"\n            aria-labelledby=\"nhs-number-input\"\n            name=\"nhs-number\"\n            type=\"text\"\n            onChange={event => setNhsNumber(event.target.value)}\n          />\n        </div>\n\n        <span className=\"nhsuk-error-message\" data-testid=\"error\">\n          {error}\n        </span>\n        <button className=\"nhsuk-button\" type=\"submit\">\n          Find patient\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { stubApiDomain, apiDomain } from './env';\n\nconst domainOptions = {\n    stub: 'stub',\n    prod: 'prod',\n    none: 'none'\n};\n\nconst features = {\n    api: domainOptions.none\n};\n\nexport const setFeatures = (featuresToSet) => {\n    Object.entries(featuresToSet).forEach(([key, value]) => {\n        features[key] = value;\n    });\n};\n\nexport const host = () => {\n    return {\n        [domainOptions.stub]: stubApiDomain,\n        [domainOptions.prod]: apiDomain,\n        [domainOptions.none]: ''\n    } [features.api];\n};","export const lookupData = [{\n    patientName: 'Richard Grayson',\n    practice: 'GP Practice 1',\n    telephone: '07700 900457',\n    email: 'richard.grayson@example.com',\n    dob: '1978-01-05T00:00:00',\n    nhsNumber: '1234567890'\n}, {\n    patientName: 'Rachel Roth',\n    practice: 'GP Practice 2',\n    telephone: '07700 900457',\n    email: 'rachel.roth@example.com',\n    dob: '1978-01-05T00:00:00',\n    nhsNumber: '2234567890'\n}, {\n    patientName: 'Donna Troy',\n    practice: 'GP Practice 3',\n    telephone: '07700 900457',\n    email: 'donna.troy@example.com',\n    dob: '1978-01-05T00:00:00',\n    nhsNumber: '3234567890'\n}, {\n    patientName: 'Kory Anders',\n    practice: 'GP Practice 4',\n    telephone: '07700 900457',\n    email: 'Kory.Anders@example.com',\n    dob: '1978-01-05T00:00:00',\n    nhsNumber: '4234567890'\n}, {\n    patientName: 'Garfield Logan',\n    practice: 'GP Practice 5',\n    telephone: '07700 900457',\n    email: 'garfield.logan@example.com',\n    dob: '1978-01-05T00:00:00',\n    nhsNumber: '5234567890'\n}];\n\nexport const patients = [];\n","import { host, local } from '../features';\nimport { patients } from './data';\nimport { endpoints } from '../env'\n\nconst addPatientService = async (patient) => {\n  await fetch(`${host()}/${endpoints.patients}`, {\n    method: 'post',\n    body: JSON.stringify(patient),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  return true;\n};\n\nexport const addPatient = async (patient) => {\n  return host() === ''\n    ? patients.push({ ...patient, status: 'Success', requestDate: '2019-12-05T00:00:00' })\n    : addPatientService(patient);\n};","import { host, local } from '../features';\nimport { lookupData } from './data';\nimport { endpoints } from '../env';\n\nconst lookupService = async (nhsNumber) => {\n  const response = await fetch(`${host()}/${endpoints.patient}/${nhsNumber}`);\n  return await response.json();\n};\n\nexport const lookup = async (nhsNumber) => {\n  return host() === ''\n    ? lookupData.find(item => item.nhsNumber === nhsNumber)\n    : lookupService(nhsNumber);\n};","import React from 'react';\nimport { convertDate } from '../service/date';\n\nconst popRows = (data) => {\n  return data.map(({ nhsNumber, patientName, requester, requestDate, status }) => {\n    return (\n      <tr className=\"nhsuk-table__row\">\n        <td className=\"nhsuk-table__cell\">{nhsNumber}</td>\n        <td className=\"nhsuk-table__cell \">{patientName}</td>\n        <td className=\"nhsuk-table__cell \">{requester}</td>\n        <td className=\"nhsuk-table__cell \">{convertDate(requestDate)}</td>\n        <td className=\"nhsuk-table__cell \">{status}</td>\n      </tr>\n    )\n  })\n};\n\nconst StatusList = ({patients}) => {\n  return (\n    <div>\n    <div data-testid=\"status-list\" className=\"nhsuk-table__panel-with-heading-tab\">\n      <div className=\"nhsuk-table-responsive\">\n        <table className=\"nhsuk-table\">\n          <caption className=\"nhsuk-table__caption\">Other possible causes of your symptoms</caption>\n          <thead className=\"nhsuk-table__head\">\n            <tr className=\"nhsuk-table__row\">\n              <th className=\"nhsuk-table__header\" scope=\"col\">NHS Number</th>\n              <th className=\"nhsuk-table__header\" scope=\"col\">Patient Name</th>\n              <th className=\"nhsuk-table__header\" scope=\"col\">Requested By</th>\n              <th className=\"nhsuk-table__header\" scope=\"col\">Requested Date</th>\n              <th className=\"nhsuk-table__header\" scope=\"col\">Status</th>\n            </tr>\n          </thead>\n          <tbody className=\"nhsuk-table__body\">\n            {popRows(patients)}\n          </tbody>\n        </table>\n      </div>\n    </div>\n      <button className=\"nhsuk-button nhsuk-u-align-right\">\n        Transfer all patients\n    </button>\n    </div>\n  );\n};\n\nexport default StatusList;","import { local, host } from '../features';\nimport { patients } from './data';\nimport { endpoints } from '../env';\n\nconst getPatientsService = async (ods) => {\n  const response = await fetch(`${host()}/${endpoints.patients}`);\n  return await response.json();\n};\n\nexport const getPatients = async (ods) => {\n  return host() === ''\n    ? patients\n    : getPatientsService(ods);\n};","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Confirmation from '../confirmation/Confirmation';\nimport Lookup from '../patient-lookup/Lookup';\nimport { publicPath } from '../env';\nimport { addPatient } from '../service/addPatient';\nimport { lookup } from '../service/lookup';\nimport StatusList from '../status-list/StatusList';\nimport { getPatients } from '../service/getPatients';\n\nexport default () => {\n    const history = useHistory();\n    const [pdsResponse, setPdsResponse] = useState();\n\n    const [patients, setPatients] = useState([]);\n\n    const getPatientsService = async () => {\n        const patients = await getPatients('nhs');\n        setPatients(patients);\n    };\n\n    useEffect(() => {\n        getPatientsService();\n    }, []);\n\n\n    return <Switch>\n        <Route exact path={`/${publicPath}`}>\n            <Lookup submitDeduction={async (nhs) => {\n                const patientInfo = await lookup(nhs);\n                setPdsResponse(patientInfo);\n                history.push(`/${publicPath}/confirmation`);\n            }}\n                validateNhsNumber={validateNhsNumber} />\n        </Route>\n        <Route path={`/${publicPath}/confirmation`}>\n            <Confirmation data={pdsResponse} confirmDeduction={async () => {\n                const { patientName, nhsNumber } = pdsResponse;\n                await addPatient({ patientName, nhsNumber, requester: '3945873948567'})\n                getPatientsService();\n                history.push(`/${publicPath}/activity`);\n            }} />\n        </Route>\n        {/* <Route path=\"/success\">\n            <Success />\n        </Route> */}\n        <Route path={`/${publicPath}/activity`}>\n            <StatusList patients={patients}/>\n        </Route>\n    </Switch>;\n};\n\n\nconst validateNhsNumber = (nhsNumber) => {\n    const nhsNumRegex = /^\\d{10}$/;\n    if (!nhsNumRegex.test(nhsNumber)) {\n        return \"No Patient found with that NHS Number\";\n    } else if (nhsNumber.charAt(0) === \"9\") {\n        return \"Patient is not in your practice\";\n    } else {\n        return \"\";\n    }\n};","import React, { Fragment } from 'react';\nimport Header from '../header/Header';\nimport styles from './App.module.scss';\nimport { parse } from 'query-string';\nimport Content from './Content';\nimport { setFeatures } from '../features';\n\nconst App = () => {\n  setFeatures(parse(window.location.search, { parseBooleans: true }))\n\n  return (\n    <Fragment>\n      <Header />\n      <div className={styles.content}>\n        <Content />\n      </div>\n    </Fragment>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}